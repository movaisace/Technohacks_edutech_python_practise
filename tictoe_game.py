# -*- coding: utf-8 -*-
"""tictoe-game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oNfVd2Xuc2cMVb4sOwlk_lHAhGVUSjkC
"""

# Initialize the board
board = [" " for _ in range(9)]

# Function to display the Tic Tac Toe board
def display_board(board):
    print(board[0] + " | " + board[1] + " | " + board[2])
    print("---------")
    print(board[3] + " | " + board[4] + " | " + board[5])
    print("---------")
    print(board[6] + " | " + board[7] + " | " + board[8])

# Function to check for a win
def check_win(board, player):
    # Check rows, columns, and diagonals for a win
    return (
        (board[0] == board[1] == board[2] == player) or
        (board[3] == board[4] == board[5] == player) or
        (board[6] == board[7] == board[8] == player) or
        (board[0] == board[3] == board[6] == player) or
        (board[1] == board[4] == board[7] == player) or
        (board[2] == board[5] == board[8] == player) or
        (board[0] == board[4] == board[8] == player) or
        (board[2] == board[4] == board[6] == player)
    )

# Function to check for a tie
def check_tie(board):
    return " " not in board

# Main game loop
current_player = "X"
while True:
    display_board(board)
    print(f"Player {current_player}'s turn")
    move = int(input("Enter your move (1-9): ") - 1)

    if board[move] == " ":
        board[move] = current_player
        if check_win(board, current_player):
            display_board(board)
            print(f"Player {current_player} wins!")
            break
        elif check_tie(board):
            display_board(board)
            print("It's a tie!")
            break
        current_player = "O" if current_player == "X" else "X"
    else:
        print("Invalid move. Try again.")